name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  provision-cluster:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Provision Minikube Cluster
        run: |
          cd terraform-minikube
          terraform init
          terraform apply -auto-approve

  versioning:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read current version
        id: current_version
        run: |
          if [ ! -f version.txt ]; then
            echo "v1" > version.txt
          else
            CURRENT_VERSION=$(cat version.txt)
            NEXT_VERSION="v$(( ${CURRENT_VERSION:1} + 1 ))"
          echo $NEXT_VERSION > version.txt
          fi
            echo "New version: $(cat version.txt)"
            echo "::set-output name=version::$(cat version.txt)"
 

      - name: Commit Version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.txt
          git commit -m "Bump version to $(cat version.txt)"
          git push

  build:
    runs-on: ubuntu-latest
    needs: versioning
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          VERSION=$(cat version.txt)
          echo "Building and pushing image with version: $VERSION"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-flask-app:${VERSION} -f app/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-flask-app:${VERSION}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to K8s
        run: |
          kubectl apply --validate=false -f k8s/deployment.yaml
          kubectl rollout status deployment/my-flask-app

  test:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Run Tests
        run: curl http://192.168.49.2:30001 | grep "Hello, welcome to my simple HTTP REST application!"

